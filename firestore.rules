rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 헬퍼 함수: 사용자가 로그인되어 있는지 확인
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 헬퍼 함수: 관리자 권한 확인
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.email == 'gostepexercise@gmail.com' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
    }
    
    // 헬퍼 함수: 문서 소유자 확인
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 헬퍼 함수: 사용자 검증된 상태 확인
    function isVerified() {
      return request.auth.token.email_verified == true;
    }
    
    // 사용자 컬렉션 규칙
    match /users/{userId} {
      // 읽기: 본인의 문서 또는 관리자
      allow read: if isOwner(userId) || isAdmin();
  
    // 생성: 관리자는 모든 사용자 문서 생성 가능, 일반 사용자는 본인 문서만
    allow create: if isAdmin() || 
      (isAuthenticated() && 
        request.auth.uid == userId &&
        request.auth.token.email_verified == true);
  
    // 업데이트: 본인의 문서 또는 관리자
    allow update: if (isOwner(userId) || isAdmin()) &&
      // 사용자는 자신의 userType을 변경할 수 없음 (관리자만 가능)
      (!request.auth.uid == userId || 
       !('userType' in request.resource.data) || 
       request.resource.data.userType == resource.data.userType);

    // 삭제: 관리자만 가능
    allow delete: if isAdmin();
    }
    
    // 🔧 FIXED: 사용자 약관 동의 컬렉션 규칙 (간소화)
    match /user_agreements/{userId} {
      // 읽기: 본인의 약관 동의 정보 또는 관리자
      allow read: if isOwner(userId) || isAdmin();
      
      // 생성/업데이트: 인증된 사용자가 본인의 약관 동의 (검증 조건 완화)
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 게시판 공지사항 컬렉션 규칙
    match /board_notice/{noticeId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 게시판 칼럼 컬렉션 규칙
    match /board_column/{columnId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 게시판 강의자료 컬렉션 규칙
    match /board_materials/{materialId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 게시판 동영상 강의 컬렉션 규칙
    match /board_videos/{videoId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 공지사항 컬렉션 규칙
    match /notices/{noticeId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 칼럼 컬렉션 규칙
    match /columns/{columnId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 강의자료 컬렉션 규칙
    match /materials/{materialId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 동영상 강의 컬렉션 규칙
    match /videos/{videoId} {
      // 읽기: 모든 사용자 (비로그인 포함)
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 교육과정 컬렉션 규칙
    match /courses/{courseId} {
      // 읽기: 모든 사용자 (비로그인 포함) - 교육 신청 페이지에서 접근 가능
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 강사 정보 컬렉션 규칙
    match /instructors/{instructorId} {
      // 읽기: 모든 사용자 (비로그인 포함) - 강사 소개 페이지에서 접근 가능
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 설정 컬렉션 규칙
    match /settings/{settingId} {
      // 읽기: 모든 사용자 (비로그인 포함) - 가격 정보 등 공개
      allow read: if true;
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 자격증 컬렉션 규칙
    match /certificates/{certId} {
      // 읽기: 본인의 자격증 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());

      // 🔧 수정: 생성은 인증된 사용자도 가능 (자신의 신청만)
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;

      // 업데이트, 삭제: 관리자만
      allow update, delete: if isAdmin();  
    }

    // 🔧 FIXED: 신청서 컬렉션 규칙 (대폭 간소화)
    match /applications/{applicationId} {
      // 읽기: 본인의 신청서 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 🎯 생성: 인증된 사용자라면 누구나 신청 가능 (검증 조건 대폭 완화)
      allow create: if isAuthenticated();
      
      // 업데이트: 본인의 신청서 또는 관리자
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 🔧 NEW: 결제 대기 중인 신청 컬렉션 규칙 추가
    match /pending_applications/{applicationId} {
      // 읽기: 본인의 신청서 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 생성: 인증된 사용자라면 누구나 생성 가능
      allow create: if isAuthenticated();
      
      // 업데이트: 본인의 신청서 또는 관리자
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 🔧 NEW: 결제 실패 로그 컬렉션 규칙 추가
    match /payment_failures/{failureId} {
      // 읽기: 본인의 실패 로그 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 생성: 인증된 사용자라면 누구나 생성 가능
      allow create: if isAuthenticated();
      
      // 업데이트, 삭제: 관리자만
      allow update, delete: if isAdmin();
    }
    
    // 수강신청 컬렉션 규칙
    match /course_applications/{applicationId} {
      // 읽기: 본인의 수강신청 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 🎯 생성: 인증된 사용자라면 누구나 신청 가능
      allow create: if isAuthenticated();
      
      // 업데이트: 본인의 수강신청 또는 관리자
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 자격증 신청 컬렉션 규칙
    match /certificate_applications/{applicationId} {
      // 읽기: 본인의 신청서 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 🎯 생성: 인증된 사용자라면 누구나 신청 가능
      allow create: if isAuthenticated();
      
      // 업데이트: 본인의 신청서 또는 관리자
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 수강신청 컬렉션 규칙 (기존)
    match /enrollments/{enrollmentId} {
      // 읽기: 본인의 수강신청 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 🎯 생성: 인증된 사용자라면 누구나 신청 가능
      allow create: if isAuthenticated();
      
      // 업데이트: 본인의 수강신청 또는 관리자
      allow update: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 시험결과 컬렉션 규칙
    match /examResults/{resultId} {
      // 읽기: 본인의 시험결과 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 생성, 업데이트, 삭제: 관리자만
      allow create, update, delete: if isAdmin();
    }
    
    // 결제 컬렉션 규칙
    match /payments/{paymentId} {
      // 읽기: 본인의 결제정보 또는 관리자
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // 생성: 인증된 사용자가 본인의 결제정보
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // 업데이트: 관리자만 (결제 상태 변경)
      allow update: if isAdmin();
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // 기본 거부 규칙 (위에 매칭되지 않는 모든 문서는 접근 불가)
    match /{document=**} {
      allow read, write: if false;
    }
  }
}