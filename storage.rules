rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // 헬퍼 함수: 사용자가 로그인되어 있는지 확인
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 헬퍼 함수: 관리자 권한 확인
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.email == 'gostepexercise@gmail.com');
    }
    
    // 헬퍼 함수: 파일 소유자 확인
    function isOwner() {
      return isAuthenticated() && 
        request.auth.uid == resource.metadata.uploadedBy;
    }
    
    // 헬퍼 함수: 허용된 파일 타입 확인
    function isValidFileType() {
      return resource.contentType.matches('image/.*') ||
             resource.contentType.matches('application/pdf') ||
             resource.contentType.matches('application/msword') ||
             resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
             resource.contentType.matches('application/vnd.ms-excel') ||
             resource.contentType.matches('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') ||
             resource.contentType.matches('application/vnd.ms-powerpoint') ||
             resource.contentType.matches('application/vnd.openxmlformats-officedocument.presentationml.presentation') ||
             resource.contentType.matches('text/.*') ||
             resource.contentType.matches('video/.*');
    }
    
    // 헬퍼 함수: 파일 크기 확인 (10MB 제한)
    function isValidFileSize() {
      return resource.size < 10 * 1024 * 1024;
    }
    
    // =================================
    // 🔧 관리자 대시보드 Storage 모니터링을 위한 규칙 추가
    // =================================
    
    // 인증서/자격증 파일 폴더 (대시보드에서 스캔)
    match /certificates/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && isValidFileType() && isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 프로필 파일 폴더 (대시보드에서 스캔)
    match /profiles/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidFileType() && isValidFileSize();
      allow delete: if isOwner() || isAdmin();
    }
    
    // 교육 자료 폴더 (대시보드에서 스캔)
    match /materials/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && isValidFileType() && isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 동영상 강의 폴더 (대시보드에서 스캔)
    match /videos/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && isValidFileType() && isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 일반 업로드 폴더 (대시보드에서 스캔)
    match /uploads/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidFileType() && isValidFileSize();
      allow delete: if isOwner() || isAdmin();
    }
    
    // =================================
    // 기존 세부적인 규칙들 (유지)
    // =================================
    
    // 프로필 이미지 업로드 (기존 규칙 유지)
    match /profile-images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (request.auth.uid == userId || isAdmin()) &&
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isOwner() || isAdmin();
    }
    
    // 교육 자료 파일 (기존 규칙 유지)
    match /course-materials/{courseId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 동영상 강의 파일 (기존 규칙 유지)
    match /video-lectures/{courseId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 공지사항 첨부파일
    match /notice-attachments/{noticeId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 칼럼 첨부파일
    match /column-attachments/{columnId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 강사 프로필 이미지
    match /instructor-images/{instructorId}/{allPaths=**} {
      allow read: if true; // 공개적으로 읽기 가능
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 임시 업로드 폴더 (1시간 후 자동 삭제)
    match /temp-uploads/{userId}/{allPaths=**} {
      allow read, write: if isAuthenticated() && 
                           request.auth.uid == userId &&
                           isValidFileType() && 
                           isValidFileSize();
      allow delete: if isOwner() || isAdmin();
    }
    
    // 결제 영수증 파일
    match /payment-receipts/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && 
                     (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && 
                      request.auth.uid == userId &&
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }
    
    // 시험 관련 파일
    match /exam-files/{examId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() && 
                      isValidFileType() && 
                      isValidFileSize();
      allow delete: if isAdmin();
    }

    // 자격증 신청/갱신 첨부파일
    match /applications/{applicationId}/{allPaths=**} {
      // 읽기: 인증된 사용자
      allow read: if isAuthenticated();
      
      // 쓰기: 인증된 사용자 (파일 업로드)
      allow write: if isAuthenticated() && 
                      // PDF, 이미지 파일만 허용
                      (request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('image/.*')) &&
                      // 파일 크기 제한 (5MB)
                      request.resource.size < 5 * 1024 * 1024;
      
      // 삭제: 관리자만 가능
      allow delete: if isAdmin();
    }
    
    // 사용자별 임시 업로드 폴더 (자격증 신청용)
    match /temp-applications/{userId}/{allPaths=**} {
      // 읽기: 본인 또는 관리자
      allow read: if isAuthenticated() && 
                     (request.auth.uid == userId || isAdmin());
      
      // 쓰기: 본인만 가능
      allow write: if isAuthenticated() && 
                      request.auth.uid == userId &&
                      (request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('image/.*')) &&
                      request.resource.size < 5 * 1024 * 1024;
      
      // 삭제: 본인 또는 관리자
      allow delete: if isAuthenticated() && 
                       (request.auth.uid == userId || isAdmin());
    }
    
    // 게시판 이미지 업로드를 위한 규칙 - 각 게시판 타입별 규칙
    match /notice_images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (isAdmin() || request.auth.uid == userId) &&
                      request.resource.contentType.matches('image/.*') && 
                      request.resource.size < 10 * 1024 * 1024;
      allow delete: if isAdmin() || request.auth.uid == userId;
    }
    
    match /column_images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (isAdmin() || request.auth.uid == userId) &&
                      request.resource.contentType.matches('image/.*') && 
                      request.resource.size < 10 * 1024 * 1024;
      allow delete: if isAdmin() || request.auth.uid == userId;
    }
    
    match /materials_images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (isAdmin() || request.auth.uid == userId) &&
                      request.resource.contentType.matches('image/.*') && 
                      request.resource.size < 10 * 1024 * 1024;
      allow delete: if isAdmin() || request.auth.uid == userId;
    }
    
    match /videos_images/{userId}/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (isAdmin() || request.auth.uid == userId) &&
                      request.resource.contentType.matches('image/.*') && 
                      request.resource.size < 10 * 1024 * 1024;
      allow delete: if isAdmin() || request.auth.uid == userId;
    }
    
    // =================================
    // 🔧 관리자 전용 Storage 관리 규칙 (모든 폴더 스캔 허용)
    // =================================
    
    // 관리자는 모든 파일과 폴더에 읽기 권한 (대시보드 모니터링용)
    match /{allPaths=**} {
      // 관리자는 모든 파일 읽기 가능 (사용량 모니터링용)
      allow read: if isAdmin();
      
      // 일반 사용자와 관리자 외에는 접근 불가
      allow write: if false;
    }
  }
}